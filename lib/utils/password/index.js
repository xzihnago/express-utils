import c from'bcrypt';import n from'crypto';var m=Object.defineProperty;var e=(t,r)=>{for(var s in r)m(t,s,{get:r[s],enumerable:true});};var i={};e(i,{hash:()=>g,verify:()=>u});var g=async t=>c.hash(t,10),u=async(t,r)=>c.compare(t,r);var p={};e(p,{hash:()=>x,verify:()=>b});var x=(t,r="sha256",s="base64")=>{let a=n.randomBytes(16),o=n.createHmac(r,a).update(t);return Buffer.concat([a,o.digest()]).toString(s)},b=(t,r,s="sha256",a="base64")=>{let o=Buffer.from(r,a),[h,y]=[o.subarray(0,16),o.subarray(16)],f=n.createHmac(s,h).update(t);return y.toString(a)===f.digest(a)};export{i as bcrypt,p as hmac};