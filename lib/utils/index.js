import p from'bcrypt';import c from'crypto';var g=Object.defineProperty;var e=(r,t)=>{for(var s in t)g(r,s,{get:t[s],enumerable:true});};var f={};e(f,{bcrypt:()=>n,hmac:()=>i});var n={};e(n,{hash:()=>x,verify:()=>u});var x=async r=>p.hash(r,10),u=async(r,t)=>p.compare(r,t);var i={};e(i,{hash:()=>b,verify:()=>d});var b=(r,t="sha256",s="base64")=>{let o=c.randomBytes(16),a=c.createHmac(t,o).update(r);return Buffer.concat([o,a.digest()]).toString(s)},d=(r,t,s="sha256",o="base64")=>{let a=Buffer.from(t,o),[h,m]=[a.subarray(0,16),a.subarray(16)],y=c.createHmac(s,h).update(r);return m.toString(o)===y.digest(o)};export{f as password};