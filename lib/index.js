import {format,transports,createLogger}from'winston';import'winston-daily-rotate-file';import M from'bcrypt';import h from'crypto';var L=Object.defineProperty;var a=(t,e)=>{for(var o in e)L(t,o,{get:e[o],enumerable:true});};var j={};a(j,{authentication:()=>x,errorHandler:()=>f,responseHandler:()=>v,routeLogger:()=>R,schemas:()=>g});var y={};a(y,{ANSI:()=>l,colorize:()=>m,logger:()=>u});var l=(c=>(c.RESET="\x1B[0m",c.FAINT="\x1B[2m",c.RED="\x1B[31m",c.GREEN="\x1B[32m",c.YELLOW="\x1B[33m",c.BLUE="\x1B[34m",c.MAGENTA="\x1B[35m",c.BOLD_RED="\x1B[1;31m",c))(l||{}),m=(t,e)=>`${e}${t}\x1B[0m`;var k=format.combine(format.timestamp(),format(t=>(t.level=t.level.toUpperCase().padStart(7),t))()),$=new transports.Console({format:format.combine(k,format.colorize(),format.printf(t=>{let e=t.message;return [m(t.timestamp,"\x1B[2m"),t.level,m(`[${e.ip??e.socket.remoteAddress??"unknown"}]`,"\x1B[35m"),m(e.method,"\x1B[33m"),e.path].join(" ")}))}),S=new transports.DailyRotateFile({format:format.combine(k,format.printf(t=>{let e=t.message;return [t.timestamp,t.level,`[${e.ip??e.socket.remoteAddress??"unknown"}]`,e.method,e.path].join(" ")})),auditFile:"logs/.audit",filename:"logs/%DATE%.log",maxFiles:"28d"}),u=createLogger({level:"debug",transports:[$,S],handleExceptions:true,handleRejections:true});var R=(t,e,o)=>{u.info(t),o();};var v=(t,e,o)=>{e.ok=r=>{e.json({data:r});},o();};var f={};a(f,{api:()=>_,www:()=>q});var _=(t,e,o,r)=>{o.statusCode===200&&o.status(500),t instanceof Error&&JSON.stringify(t)==="{}"?o.json({error:{name:t.name,message:t.message}}):o.json({error:t});};var q=(t,e)=>(o,r,s,n)=>{let p=typeof t=="string"?t:t?.[s.statusCode],d=(typeof e=="string"?e:e?.[s.statusCode])??(o instanceof Error?o.message:"Unknown error");s.send(`
    <script>
      alert("${d}");
      ${p?`window.location.replace("${p}")`:"history.back()"}
    </script>
  `);};var x={};a(x,{local:()=>z});var z=(t,e,o)=>{let r=t.ip??t.socket.remoteAddress;if(r!=="::1"&&r!=="localhost")throw e.status(401),new Error("Unauthorized");o();};var g={};a(g,{joi:()=>O,superstruct:()=>C,zod:()=>D});var O=(t,e="body")=>async(o,r,s)=>{try{e==="body"?o.body=await t.validateAsync(o.body):await t.validateAsync(o.query);}catch(n){throw r.status(422),n}s();};var C=(t,e="body")=>(o,r,s)=>{try{e==="body"?o.body=t.create(o.body):t.create(o.query);}catch(n){throw r.status(422),n}s();};var D=(t,e="body")=>async(o,r,s)=>{try{e==="body"?o.body=await t.parseAsync(o.body):await t.parseAsync(o.query);}catch(n){throw r.status(422),n}s();};var A={};a(A,{logging:()=>y,password:()=>E});var E={};a(E,{bcrypt:()=>b,hmac:()=>w});var b={};a(b,{hash:()=>F,verify:()=>H});var F=async t=>M.hash(t,10),H=async(t,e)=>M.compare(t,e);var w={};a(w,{hash:()=>U,verify:()=>G});var U=(t,e="sha256",o="base64")=>{let r=h.randomBytes(16),s=h.createHmac(e,r).update(t);return Buffer.concat([r,s.digest()]).toString(o)},G=(t,e,o="sha256",r="base64")=>{let s=Buffer.from(e,r),[n,p]=[s.subarray(0,16),s.subarray(16)],d=h.createHmac(o,n).update(t);return p.toString(r)===d.digest(r)};export{j as middleware,A as utils};